<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-02-09T16:49:44+08:00</updated><id>//</id><title type="html">RobotBros</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">在SpiderX T74运行Huawei LiteOS</title><link href="/liteos-on-spiderx-t74" rel="alternate" type="text/html" title="在SpiderX T74运行Huawei LiteOS" /><published>2016-12-27T18:51:36+08:00</published><updated>2016-12-27T18:51:36+08:00</updated><id>/liteos-on-spiderx-t74</id><content type="html" xml:base="/liteos-on-spiderx-t74"></content><author><name>Enix Yu</name></author><summary type="html"></summary></entry><entry><title type="html">SpiderX Cube代码讲解系列 Part1</title><link href="/spiderx-cube-explain-1" rel="alternate" type="text/html" title="SpiderX Cube代码讲解系列 Part1" /><published>2016-12-27T17:59:36+08:00</published><updated>2016-12-27T17:59:36+08:00</updated><id>/spiderx-cube-explain-1</id><content type="html" xml:base="/spiderx-cube-explain-1">&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;

&lt;p&gt;SpiderXCube是舵机控制板T74，遥控板JY144的代码库例程。SpiderXCube类似于ST公司的STM32Fxx_Cube，其中包括了最基本的单元使用例程，例如2.4G无线控制，蓝牙2.0，蓝牙4.0模块的使用例程，JOYSTICK遥控板的驱动，定时器的使用，过流保护例程等等。为了让广大开发者快速上手SpiderXCube，T74开发板和JY144开发板。&lt;/p&gt;

&lt;p&gt;SpiderXCube的目录结构如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ADC_VoltageSampling/                        T74 ADC电压采样例程
    BSP/                                        T74硬件相关驱动库
    clean.sh*                                   清除编译生成的二进制文件
    CMSIS/                                      ARM CMSIS库
    Datasheets/                                 相关的Datasheet
    EXTI_OverCurrent/                           T74过流保护例程
    FLASH_SaveData/                             T74 flash操作例程
    Joystick-ROM/                               JY144开发板固件
    Labview/                                    T74上位机 labview控制程序，只适用于2.4G通信
    Middlewares/                                第三方库
    README.txt                                  说明文档
    SCH/                                        原理图
    SimpleControlBLE/                           T74蓝牙控制例程，支持蓝牙2.0和蓝牙4.0模块
    SimpleControlNRF/                           T74 2.4G无线控制例程，支持JY144作为上位机或Labview作为上位机控制
    SpiderXCube-Bluetooth-iOS/                  简单的iOS蓝牙读写例程
    STM32F10x_FWLib/                            STM32F10x固件库
    TIM_ServoControl/                           T74定时器例程
    USART_DMA_Bluetooth2_0/                     蓝牙2.0模块例程，使用DMA传输数据
    USART_DMA_Bluetooth4_0/                     蓝牙4.0模块例程，使用DMA传输数据
    USART_IT_Bluetooth2_0/                      蓝牙2.0模块例程，使用串口中断传输数据
    USART_IT_Bluetooth4_0/                      蓝牙4.0模块例程，使用串口中断传输数据
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;快速上手建议&quot;&gt;快速上手建议&lt;/h2&gt;

&lt;p&gt;对于刚接触SpiderXCube的用户，有如下几个建议：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;T74控制版的端口映射表，请查看 &lt;strong&gt;SCH/控制板端口配置表V02(20151218).xls&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;JY144遥控板的端口映射表，请查看 &lt;strong&gt;SCH/遥控板端口配置表V01(20151218).xls&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;若开发者想熟悉如何使用JY144遥控板，则可以阅读 &lt;strong&gt;Joystick-ROM&lt;/strong&gt; 的相关代码。&lt;/li&gt;
  &lt;li&gt;若想熟悉如何使用蓝牙控制，则阅读 &lt;strong&gt;SimpleControlBLE&lt;/strong&gt;的相关代码。&lt;/li&gt;
  &lt;li&gt;若对iOS控制蓝牙比较感兴趣，可以阅读 &lt;strong&gt;SpiderXCube-Bluetooth-iOS&lt;/strong&gt;，里面包含了最基本的蓝牙读写例程。&lt;/li&gt;
  &lt;li&gt;若想熟悉如何使用2.4G控制舵机，则可以阅读 &lt;strong&gt;SimpleControlNRF&lt;/strong&gt;的下位机代码，和 &lt;strong&gt;Labview&lt;/strong&gt;关于上位机的代码。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;spiderxcube各模块的介绍&quot;&gt;SpiderXCube各模块的介绍&lt;/h2&gt;

&lt;h3 id=&quot;1-配置文件spidernanoconfigh&quot;&gt;1. 配置文件SpiderNANOConfig.h&lt;/h3&gt;

&lt;p&gt;在每一个例程的Inc目录下，都有一个名为SpiderNANOConfig.h的配置文件，该文件用于设置一些编译相关宏。其中包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;DEBUG&lt;/strong&gt;          - 用于控制是否通过串口打印调试信息&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;BATTERY_7V4&lt;/strong&gt;    - 当定义该宏的时候，则说明使用7.4v电池，若注释该行的时候，则表示使用11.1v的锂电池。对于T74，则必须定义该宏；对于T11/D11则根据实际情况决定是否定义该宏&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;BLUETOOTH_4_0&lt;/strong&gt;  - 是否使用蓝牙4.0模块，当BLUETOOTH_4_0为0的时候，则使用蓝牙2.0模块，若为非0值的时候，则说明使用蓝牙4.0模块&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-adc电压采样&quot;&gt;2. ADC电压采样&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;相关目录: ADC_VoltageSampling&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;T74目前只支持7.4v锂电池，而T11则支持7.4v和11.1v的锂电，它们同样使用SpiderXCube作为固件库。在使用该例程前，请阅读SpiderNANOConfig.h的配置说明。电压采样是为了保护电池，免受过度放电而缩短电池的寿命。&lt;/p&gt;

&lt;p&gt;在BSP/Inc/power.h中，定义了电压与ADC值的对应关系：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@brief  过流/过压保护值&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#ifdef BATTERY_7V4                                     &lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;#define POWER_WARN_VOLTAGE               2358   &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*!&amp;lt; 7.6V, 对应AD值       */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;#define POWER_LOW_VOLTAGE                2234   &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*!&amp;lt; 7.2V, 对应AD值       */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#else&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;#define POWER_WARN_VOLTAGE               3537   &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*!&amp;lt; 11.4V AD值           */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&lt;/span&gt;
    &lt;span class=&quot;cp&quot;&gt;#define POWER_LOW_VOLTAGE                3351   &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*!&amp;lt; 10.8V AD值           */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define POWER_OVER_CURRENT               846    &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*!&amp;lt; 15A, 对应AD值1000:17.74A */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define POWER_MAX_SAMPLE_SIZE            5      &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*!&amp;lt; 电压/电流缓冲区大小      */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;实践建议&quot;&gt;&lt;em&gt;实践建议&lt;/em&gt;&lt;/h4&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;这里定义了低电压报警的阈值和低电压强制关闭电源的阈值，分别是POWER_WARN_VOLTAGE和POWER_LOW_VOLTAGE。在实际开发中，当电压低于POWER_WARN_VOLTAGE但高于POWER_LOW_VOLTAGE的时候，则通过蜂鸣器或改变灯闪频率，通知控制人员，电压过低，需要及时充电。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;当采样电压低于POWER_LOW_VOLTAGE的时候，则必须关闭舵机电源，并通过蜂鸣器或灯闪频率通知操作人员，电压过低，不能继续正常工作，必须进行充电。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;以下是main.c的代码，&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Systick Init */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HAL_InitTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IRQ_SYSTICK_Priority&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;LED_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;cm&quot;&gt;/* ADC voltage sampleing init */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Adc_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;cm&quot;&gt;/* ADC DMA init*/&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Adc_DMA_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;cm&quot;&gt;/*20 ms  DIV=1 AHB1 = 36M*2  7200*200/72(us)=20ms       &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      battery voltage and current sampling             */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Adc_Timer_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7199&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;199&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;/*--------- 电压检测 -----------*/&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;voltage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POWER_OVER_VOLTAGE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cm&quot;&gt;/* 过压 */&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;LED_flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;voltage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POWER_WARN_VOLTAGE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cm&quot;&gt;/* 低压警告 */&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;LED_flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;voltage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POWER_LOW_VOLTAGE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cm&quot;&gt;/* 电压过低 */&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;LED_flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;cm&quot;&gt;/*----------- 电流检测 ---------*/&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POWER_OVER_CURRENT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cm&quot;&gt;/* 软件检测过流 */&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;LED_flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;首先对时钟进行初始化，LED初始化，ADC / ADC DMA初始化，和采样定时器的初始化，然后在循环体中，检测当前的采样电压值，判断是否低于警告或错误的电压阈值。当电压低于阈值的时候，根据不同情况设置LED的闪烁频率，用于通知用户电池需要充电。&lt;/p&gt;

&lt;p&gt;ADC电压采样使用了DMA单元数据传输，这样可以减少对MCU的工作量，同时，启用了一个定时器每20ms触发一次采样，当定时器溢出时读取ADC值。电压使用了均值滤波，用户可以根据自己的需要实现不同的滤波算法。&lt;/p&gt;

&lt;h3 id=&quot;3-过流检测&quot;&gt;3. 过流检测&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;相关目录：EXTI_OverCurrent&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;T74板载过流保护单元。舵机在负载情况下工作的时候，电流会随之增大，同时电流也会随着舵机的数量的增加而增大。所以我们需要一个过流保护机制，在电流超过阈值的情况下，必须关闭舵机电源，从而让舵机免受过流而烧毁。&lt;/p&gt;

&lt;p&gt;在这里，我们使用了MCU的外部中断，连接过流检测单元，在电流超过阈值的情况下，过流单元会产生外部中断。当MCU检测到过流中断信号后，应该及时切断电源。&lt;/p&gt;

&lt;p&gt;过流保护中断的入口地址位于：SpiderXCube/EXTI_OverCurrent/Src/stm32f1xx_it.c&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@brief  过流检测保护外部中断&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@param  None&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@retval None&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OVERCURRENT_EXTIx_IRQHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EXTI_GetFlagStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OVERCURRENT_EXTI_LINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RESET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                              
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_ReadInputDataBit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OVERCURRENT_EXTI_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVERCURRENT_EXTI_PIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cm&quot;&gt;/* 通知用户过流 */&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;overCurrentFlag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;                                                                   
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EXTI_ClearITPendingBit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OVERCURRENT_EXTI_LINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//清除LINE5上的中断标志位&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;main.c主程序中，主函数体用于检测overCurrentFlag标记，并在电路过大的情况下，通过灯闪频率通知用户出现过流情况。&lt;/p&gt;

&lt;h4 id=&quot;实践建议-1&quot;&gt;&lt;em&gt;实践建议&lt;/em&gt;&lt;/h4&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;当过流出现的情况下，必须及时切断舵机电源，而切断舵机电源的逻辑应该在中断函数体内完成，这样可以保证电源的及时切断。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;切断电源可以调用SpiderXCube/BSP/Inc/servo.h的 &lt;code&gt;void Servo_PWRSwitchSet(u8 switchState);&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@brief  Main function&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@param  None&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@retval None&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Systick Init */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HAL_InitTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IRQ_SYSTICK_Priority&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;LED_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;cm&quot;&gt;/* ADC voltage sampleing init */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Adc_CurrentOverStopInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;/*----------- 电流检测 ---------*/&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;overCurrentFlag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;cm&quot;&gt;/* 软件检测过流 */&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;LED_flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;4-flash的读写操作&quot;&gt;4. Flash的读写操作&lt;/h3&gt;

&lt;p&gt;Flash在MCU的作用中非常重要，可以用于保存用户数据，而在舵机控制中，可以用于保存动作定义。而Flash的操作比较麻烦，因为有时候我们不是一次过写入一批数据，而flash的操作需要先擦除一个区域的数据，然后才能写入数据，最后对该区域进行unlock。&lt;/p&gt;

&lt;p&gt;而此例子引入了数据库的事务概念，可以让用户可以自由的控制flash的数据写入。&lt;/p&gt;

&lt;p&gt;在进行写入操作前，必须调用事务开启操作：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    void Flash_Sync_TransWriteBegin(void);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;第二步，需要进行擦除操作&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    Boolean Flash_Sync_TransErase(uint32_t address, uint32_t writeLen);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接着，就是多次调用写入操作：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    Boolean Flash_Sync_TransWrite(uint32_t address, const uint8_t *buffer, uint32_t writeLen, uint8_t pad);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后，必须调用事务提交操作：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    void Flash_Sync_TransWriteEnd(void);
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;5-舵机控制&quot;&gt;5. 舵机控制&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;相关目录：TIM_ServoControl&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;舵机的控制，是通过PWM实现。SpiderXCube已经对角度的转动进行了函数封装。舵机操作函数可以查看:&lt;code&gt;SpiderXCube/BSP/Inc/servo.h&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@brief  初始化舵机硬件底层驱动&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@param  None&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@retval None&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Servo_MspInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@brief  舵机初始位置动作复位&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@param  None&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@retval None&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Servo_StateReset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@brief  Servo Handler init&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Servo_HandlerInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@brief  舵机角度设置&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@param  舵机编号&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@param  转动角度&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@param  是否是初始化操作&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@retval None&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Servo_SetServoAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;servoId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;angle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isReset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@brief  舵机总电源开关&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@param  switch:舵机电源开关&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *      @arg SERVO_SWITCH_ON: 打开&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *      @arg SERVO_SWITCH_OFF: 关闭&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@retval None&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Servo_PWRSwitchSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;switchState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;舵机的管脚映射表如下所示：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *@brief  舵机编号&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *   编号缩写 L: Left;  R: Right;  F: Front;  M: Middle;  E: End&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *                                   +--------+&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *                                   |  HEAD  |&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *                                   +--------+&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *       2           1           0   |        |   9           10         11 &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *   +-------+   +-------+   +-------+        +-------+   +-------+   +-------+  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *   | L_F_E |---| L_F_M |---| L_F_F |        | R_F_F |---| R_F_M |---| R_F_E |&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *   +-------+   +-------+   +-------+        +-------+   +-------+   +-------+   &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *       5           4           3   |        |   12          13         14    &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *   +-------+   +-------+   +-------+        +-------+   +-------+   +-------+  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *   | L_M_E |---| L_M_M |---| L_M_F |        | R_M_F |---| R_M_M |---| R_M_E |&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *   +-------+   +-------+   +-------+        +-------+   +-------+   +-------+  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *       8           7           6   |        |   15          16         17  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *   +-------+   +-------+   +-------+        +-------+   +-------+   +-------+  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *   | L_B_E |---| L_B_M |---| L_B_F |        | R_B_F |---| R_B_M |---| R_B_E |&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *   +-------+   +-------+   +-------+        +-------+   +-------+   +-------+  &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *                                   |        |&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *                                   |        |&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *                     18          19          20          21   &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *                 +========+  +========+  +========+  +========+&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *                 |  DRV1  |  |  DRV2  |  |  DRV3  |  |  DRV4  |&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *                 +========+  +========+  +========+  +========+&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;例如 &lt;em&gt;0&lt;/em&gt; 号舵机表示左前脚的末端关节舵机。&lt;/p&gt;

&lt;p&gt;如果需要对 &lt;em&gt;1&lt;/em&gt; 号舵机，转动至30度位置，则可以调用：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;Servo_SetServoAngle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;6-24g控制完整例程&quot;&gt;6. 2.4G控制完整例程&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;相关目录：SimpleControlNRF&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2.4G控制分为无线手柄控制和PC控制。无线控制的通信协议采用与蓝牙一致的通信协议。具体的讲解将在系列文章Part 2中展开。&lt;/p&gt;

&lt;h3 id=&quot;7-蓝牙控制完整例程&quot;&gt;7. 蓝牙控制完整例程&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;相关目录：SimpleControlBLE&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;蓝牙模块支持2.0和4.0，编译选项中，可以通过设置BLUETOOTH_4_0选项，该选项位于&lt;code&gt;SpiderXCube/SimpleControlBLE/Inc/SpiderNANOConfig.h&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * @brief 蓝牙模块选择(默认开启，表示蓝牙4.0模块)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * @note 若使用蓝牙4.0模块则开启，关闭则默认使用蓝牙2.0模块&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * 例如，使用蓝牙2.0模块，则把 BLUETOOTH_4_0 定义为 0&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; *&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define BLUETOOTH_4_0                     0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;蓝牙2.0的驱动模块函数声明位于&lt;code&gt;bt2.h&lt;/code&gt;，蓝牙2.0模块支持HC-06模块&lt;/p&gt;

&lt;p&gt;蓝牙4.0的驱动模块函数声明位于bt4.h，蓝牙4.0模块支持BT-05模块&lt;/p&gt;

&lt;p&gt;蓝牙帧格式:&lt;/p&gt;

&lt;p&gt;所有长度帧均为20bytes，帧格式如下:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;o&quot;&gt;+----------+-----------------------------+-----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;帧头&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;H&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;err&quot;&gt;帧数据&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;校验和&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+----------+-----------------------------+-----------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;校验和计算公式:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;C = (( H + D[0] + D[1] + … + D[17] ) &amp;amp; 0xFF ) ^ 0xFF&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;程序默认支持2种帧&lt;/p&gt;

&lt;h4 id=&quot;1-设置舵机角度请求&quot;&gt;1. 设置舵机角度请求&lt;/h4&gt;

&lt;p&gt;请求帧(设置为初始角度):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;055a1e5a5a1e5a5a1e5a5a965a5a965a5a965a000000000000000000000000a6&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;答复:    无&lt;/p&gt;

&lt;p&gt;请求帧(末端E舵机设置为80角度):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;05501e50501e50501e505096505096505096500000000000000000000000001e&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;[ 帧头 L-F-F  L-F-M  L-F-E …. (具体定义请查看servo.h) ]&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;答复:    无&lt;/p&gt;

&lt;p&gt;注意，设置的角度必须在舵机的允许范围之内，以免烧毁舵机.&lt;/p&gt;

&lt;h4 id=&quot;2-获取控制板状态&quot;&gt;2. 获取控制板状态&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;err&quot;&gt;请求帧&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;A20000000000000000000000000000000000005D&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;答复帧&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;A3&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;  &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;  &lt;span class=&quot;mo&quot;&gt;00000000&lt;/span&gt;  &lt;span class=&quot;mo&quot;&gt;00000000&lt;/span&gt;  &lt;span class=&quot;mo&quot;&gt;000000000000&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;   
           &lt;span class=&quot;o&quot;&gt;-----&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-----&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;--------&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;--------&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;------------&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;------&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;电压&lt;/span&gt;    &lt;span class=&quot;err&quot;&gt;电流&lt;/span&gt;   &lt;span class=&quot;err&quot;&gt;错误代码&lt;/span&gt;    &lt;span class=&quot;err&quot;&gt;警告代码&lt;/span&gt;        &lt;span class=&quot;err&quot;&gt;预留&lt;/span&gt;       &lt;span class=&quot;err&quot;&gt;校验和&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;接下来的代码系列讲解Part 2将对2.4G无线控制作详细讲解，Part 3将对蓝牙控制作详细讲解。&lt;/p&gt;</content><author><name>Enix Yu</name></author><summary type="html">简介</summary></entry><entry><title type="html">SpiderX T74开发板快速上手指南</title><link href="/quick-start-guide-for-spiderx-t74" rel="alternate" type="text/html" title="SpiderX T74开发板快速上手指南" /><published>2016-12-27T15:59:36+08:00</published><updated>2016-12-27T15:59:36+08:00</updated><id>/quick-start-guide-for-spiderx-t74</id><content type="html" xml:base="/quick-start-guide-for-spiderx-t74">&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;

&lt;p&gt;SpiderX T74是一款自主研发的专门面向机器人爱好者的开发平台，借助T74，你可以实现多达22路的舵机控制，同时集成了蓝牙4.0模块接口，蓝牙2.0模块接口，wifi接口，NRF24L01 SPI 接口。方便你选择市面流行的任意一种无线方案实现无线控制。&lt;/p&gt;

&lt;p&gt;我们摒弃传统的发热厉害的整流桥方案，采用效率更高的开关电源电源方案，还为每一路舵机设计了PTC过流保护，软件电流电压监测，过流中断，让您的舵机免受意外烧毁的问题。同时，T74有别于市面其他舵机控制版，单一的单片机控制舵机，并需要外接其他mcu通过串口与单片机交互的方案，我们采用流行的STM32 mcu作为主控，无需开发者编写两套控制程序，统一了舵机控制和其他功能开发的平台，让开发者更快的上手，更快的写出awesome的代码和amazing的应用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/products/spiderx-servo-control-board-t74-001.png&quot; alt=&quot;t74&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;安装与接线24g无线控制篇&quot;&gt;安装与接线（2.4G无线控制篇）&lt;/h2&gt;

&lt;h4 id=&quot;1-准备材料如下图其中包括&quot;&gt;1. 准备材料如下图，其中包括：&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;T74 * 1，&lt;/li&gt;
  &lt;li&gt;2.4G无线控制模块nRF24L01&lt;/li&gt;
  &lt;li&gt;7.4v电源，舵机多个。&lt;/li&gt;
  &lt;li&gt;本节将讲解如何使用2.4g，所以蓝牙模块无需准备。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0419.png&quot; alt=&quot;step-1&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-t74板载24g无线接口spi口用户可以方便的安装24g模块安装非常简单如下图所示&quot;&gt;2. T74板载2.4G无线接口(SPI口)，用户可以方便的安装2.4g模块，安装非常简单，如下图所示：&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0420.png&quot; alt=&quot;step-2&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-t74支持最多22路舵机控制安装舵机务必要看清楚舵机的接线以免烧坏舵机以r-b-f为例从左至有分别为地线电源线和pwm信号线22路舵机的接口都以英文字母命名具体命名对应规则请看表1&quot;&gt;3. T74支持最多22路舵机控制，安装舵机&lt;em&gt;务必要看清楚舵机的接线，以免烧坏舵机&lt;/em&gt;。以R-B-F为例，从左至有分别为地线，电源线和PWM信号线。22路舵机的接口都以英文字母命名，具体命名对应规则，请看&lt;a href=&quot;#table1&quot;&gt;表1&lt;/a&gt;。&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0421.png&quot; alt=&quot;step-3&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-电源使用的是74v-2芯锂电池品牌可以根据自己喜好选择安装大功告成非常简单成品如下图&quot;&gt;4. 电源使用的是7.4v 2芯锂电池，品牌可以根据自己喜好选择。安装大功告成，非常简单。成品如下图：&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0423.png&quot; alt=&quot;step-4&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;5-上电测试t74右上方有一个红色的拨动开关向右波动后应该可以看到蓝色led指示灯闪烁并听到beep的一声的蜂鸣器声音t74默认已经烧写了24g无线控制的固件若固件未烧写可以根据需要烧写固件本文默认使用spiderx-cube-110的固件做演示&quot;&gt;5. 上电测试。T74右上方有一个红色的拨动开关，向右波动后，应该可以看到蓝色LED指示灯闪烁，并听到beep的一声的蜂鸣器声音。（T74默认已经烧写了2.4g无线控制的固件，若固件未烧写，可以根据需要烧写固件，本文默认使用SpiderX-Cube 1.1.0的固件做演示。）&lt;/h4&gt;

&lt;h2 id=&quot;安装与接线蓝牙40篇&quot;&gt;安装与接线（蓝牙4.0篇）&lt;/h2&gt;

&lt;h4 id=&quot;1-蓝牙控制与24g无线控制基本一样蓝牙模块安装如下图所示需注意的是蓝牙模块与市面的模块有些不一样需要采用长针方案同时spiderx-cube提供了蓝牙40的例程和蓝牙20的例程详细的代码讲解将在后续的博文中展开&quot;&gt;1. 蓝牙控制与2.4g无线控制基本一样，蓝牙模块安装如下图所示，需注意的是，蓝牙模块与市面的模块有些不一样，需要采用长针方案。同时SpiderX-Cube提供了蓝牙4.0的例程，和蓝牙2.0的例程，详细的代码讲解将在后续的博文中展开。&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0425.png&quot; alt=&quot;step-4&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-表1&quot;&gt;&lt;a name=&quot;table1&quot;&gt;&lt;/a&gt; 表1&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;R - 右脚&lt;/li&gt;
  &lt;li&gt;L - 左脚&lt;/li&gt;
  &lt;li&gt;B - 后足&lt;/li&gt;
  &lt;li&gt;F - 前关节 ／ 前足&lt;/li&gt;
  &lt;li&gt;E - 末端关节&lt;/li&gt;
  &lt;li&gt;M - 中间关节 ／ 中足&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Enix Yu</name></author><summary type="html">简介</summary></entry><entry><title type="html">遥控板 JY144快速上手指南</title><link href="/quick-start-guide-for-joystick-jy144" rel="alternate" type="text/html" title="遥控板 JY144快速上手指南" /><published>2016-12-27T15:59:36+08:00</published><updated>2016-12-27T15:59:36+08:00</updated><id>/quick-start-guide-for-joystick-jy144</id><content type="html" xml:base="/quick-start-guide-for-joystick-jy144">&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;

&lt;p&gt;机器人遥控手柄，无人机遥控手柄，玩具车控制摇杆…
配合陀螺仪，水平仪可实现更多玩法哦&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/products/joystick-board-jy144-001.jpg&quot; alt=&quot;jy144&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;

&lt;p&gt;开箱后，配件如下图所示，配件包含开发板&lt;em&gt;1，1.44寸彩色显示屏&lt;/em&gt;1，3.7v电池&lt;em&gt;1，2.4G无线传输模块&lt;/em&gt;1，摇杆*2：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0453.png&quot; alt=&quot;jy144&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;第一步安装电池&quot;&gt;第一步，安装电池&lt;/h3&gt;

&lt;p&gt;电池附送了一个魔术贴，可以让电池粘附在开发板上，安装电池后，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0454.png&quot; alt=&quot;jy144&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;第二步安装显示屏&quot;&gt;第二步，安装显示屏&lt;/h3&gt;

&lt;p&gt;1.44寸显示屏的安装如下图所示，显示屏排针只需对准开发板的蓝色的插孔即可：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0455.png&quot; alt=&quot;jy144&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;第三步安装24g模块摇杆&quot;&gt;第三步，安装2.4G模块，摇杆&lt;/h3&gt;

&lt;p&gt;2.4g模块安装也是非常简单，排针只需对齐黄色接口即可，安装完毕后，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0456.png&quot; alt=&quot;jy144&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;第四步上电测试&quot;&gt;第四步，上电测试&lt;/h3&gt;

&lt;p&gt;准备完毕后，只需向右拨动开发板左上方的红色按钮，即可为开发板上电。开发板在出厂时已烧录了固件，正常上电后，可以看到一个”RobotBros”的logo，并有一系列的检测信息输出，如果配置没有问题的话，屏幕如图所示，屏幕显示了两个数据，第一行的是剩余电量，第二行为电池采样电压值，如果电压值过低，则需要对电池充电：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0459.png&quot; alt=&quot;jy144&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;电池充电&quot;&gt;电池充电&lt;/h3&gt;

&lt;p&gt;开发板内置了USB充电模块，用户可以使用USB线对电池进行充电。充电过程中，请保持开关为闭合状态（拨动开关处于左侧）。充电过程中，蓝色灯会保持常亮，当蓝色灯熄灭后，表示充电完成。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0460.png&quot; alt=&quot;jy144&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;通过swd烧写口烧录固件&quot;&gt;通过SWD烧写口烧录固件&lt;/h3&gt;

&lt;p&gt;开发板预留了SWD开发口，可以让开发人员方便的烧录固件。接线如下图所示&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/post/IMG_0461.png&quot; alt=&quot;jy144&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;固件下载&quot;&gt;固件下载&lt;/h2&gt;

&lt;p&gt;开源程序&lt;a href=&quot;https://github.com/RobotBros/SpiderXCube&quot;&gt;SpiderX-Cube&lt;/a&gt;中，包含了遥控开发板的固件，对应的文件夹为：Joystick-ROM&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如果您使用的是MDK Keil，则打开Joystick-ROM/USER/PWM.uvprojx启动项目&lt;/li&gt;
  &lt;li&gt;若您使用的是IAR，则打开Joystick-ROM/EWARM/Joystick-ROM.eww启动项目。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mainc文件介绍&quot;&gt;main.c文件介绍&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   
    &lt;span class=&quot;c1&quot;&gt;// 系统初始化&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SysInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;   
        &lt;span class=&quot;c1&quot;&gt;// 判断是否初始化成功&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System_fault_flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSTEM_NO_FAULT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 获取ad采样的数值&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Get_all_percentage_ad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            
            &lt;span class=&quot;c1&quot;&gt;// 设置LCD背景灯光&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;LCD_backlight_set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// 读取IMU数据（如有IMU模块）&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Imu_motion_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// 获取按键状态&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Key_action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 

            &lt;span class=&quot;c1&quot;&gt;// 通过2.4G发送数据&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Syterm_master_nrf_tx_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// 接收数据&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Syterm_master_nrf_rx_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;          
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System_fault_check_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System_fault_clear_handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;    
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;更多代码的实现，请查看&lt;a href=&quot;https://github.com/RobotBros/SpiderXCube&quot;&gt;SpiderX-Cube&lt;/a&gt;中关于Joystick-ROM的部分。&lt;/p&gt;</content><author><name>Enix Yu</name></author><summary type="html">简介</summary></entry><entry><title type="html">Hello World</title><link href="/hello-world" rel="alternate" type="text/html" title="Hello World" /><published>2016-12-22T21:51:28+08:00</published><updated>2016-12-22T21:51:28+08:00</updated><id>/hello-world</id><content type="html" xml:base="/hello-world">&lt;h1 id=&quot;robotbroscn-website正式上线纪念&quot;&gt;RobotBros.cn website正式上线纪念&lt;/h1&gt;

&lt;p&gt;这是robotbros.cn网站改版后的第一个贴，特以此纪念。&lt;/p&gt;

&lt;h3 id=&quot;say-hi-with-ruby&quot;&gt;Say Hi with Ruby&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;RobotBros&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;say-hi-with-python&quot;&gt;Say Hi with Python&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hi, {}&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;RobotBros&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;say-hi-with-swift&quot;&gt;Say Hi with Swift&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hi, %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;RobotBros&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;say-hi-with-oc&quot;&gt;Say Hi with OC&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-objective-c&quot; data-lang=&quot;objective-c&quot;&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSLog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;Hi, %@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;HelloWorld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;world&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HelloWorld&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;world&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;RobotBros&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;say-hi-with-c&quot;&gt;Say Hi with C&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hi, %s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;RobotBros&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Enix Yu  &lt;br /&gt;
2016-12-22&lt;/p&gt;</content><author><name>Enix Yu</name></author><summary type="html">RobotBros.cn website正式上线纪念</summary></entry></feed>
